{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport mongoose from 'mongoose';\nvar connection = {};\n\nfunction dbConnect() {\n  return _dbConnect.apply(this, arguments);\n}\n\nfunction _dbConnect() {\n  _dbConnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var db;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!connection.isConnected) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return mongoose.connect('mongodb+srv://marcin100:marcinmarcin100@afi-app.rcqkw.mongodb.net/Afi-app?retryWrites=true&w=majority', {\n              useNewUrlParser: true,\n              useCreateIndex: true,\n              useUnifiedTopology: true,\n              useFindAndModify: false\n            });\n\n          case 4:\n            db = _context.sent;\n            connection.isConnected = db.connections[0].readyState; //   const connection = mongoose.connection;\n            //   connection.once('open', () => {\n            //     console.log('MongoDB database connection established successfully');\n            //   });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _dbConnect.apply(this, arguments);\n}\n\nexport default dbConnect;","map":null,"metadata":{},"sourceType":"module"}